* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

// Variable Declaration
$bodyBgColor: pink;
$bodyFontSize: 1.2rem;
$bodyColor: white;
$bodyFontFamily: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
$headerBgColor: #30a7c3;
$bannerBgColor: hotpink;
$myBorder: 2px solid green;

body {
  font-family: $bodyFontFamily;
  background-color: $bodyBgColor;
  font-size: $bodyFontSize;
  color: $bodyColor;
}

header {
  background-color: $headerBgColor;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;

  img {
    width: 80px;
    border: $myBorder;
    border-radius: 10px;
    margin: 0.5rem;
  }
  ul {
    list-style-type: none;
    li {
      display: inline-block;
      padding: 0.5rem;
      &:hover {
        text-decoration: underline;
      }
      //   hover'ı a ya koysak da olur..

      a {
        text-decoration: none;
        color: $bodyColor;
      }
    }
  }
}
.banner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border: $myBorder;
  padding: 1rem;
  line-height: 2rem;
  background-color: $bannerBgColor;
  aside {
    button {
      padding: 0.5rem;
      margin-top: 1rem;
      margin-right: 0.5rem;
      background-color: $headerBgColor;
      border: none;
      border-radius: 5px;
      &:hover {
        background-color: $bodyBgColor;
        cursor: pointer;
      }
    }
  }
  img {
    width: 30%;
    // for responsive
    min-width: 250px;
    max-width: 480px;
  }
}
// ! CSS DE FONKSİYON OLUŞTURMA (@MİXİN)
//! declare -> fonskiyonu belirtme
//! invoke -> fonksiyonu çağırma
//! fonksiyonu,kullanacağımız yerde @include ile çağırıyoruz

@mixin myCards($bgColor, $fontColor) {
  // burdaki değerleri parametrik de yapabiliriz veya kendimiz de verebiliriz
  background-color: $bgColor;
  // parametrik
  width: 25%;
  height: 15rem;
  // parametrik değil,biz belirledik
  color: $fontColor;
  border: $myBorder;
  border-radius: 5px;
}
.cards {
  display: flex;
  //   flex-direction : row olduğu için yan yana dizilirler
  gap: 0.7rem;
  margin: 0.5rem;
  .card1 {
    @include myCards(green, white);
  }
  .card2 {
    @include myCards(red, white);
  }
  .card3 {
    @include myCards(yellow, black);
  }
  .card4 {
    @include myCards(black, yellow);
  }
}

.articles {
  display: flex;
  padding: 1rem;
  gap: 1rem;
  //   gap'ler taşıyıcıya verilir.

  .article1 {
    background-color: grey;
    border: $myBorder;
    border-radius: 5px;
    width: 50%;
    height: 10rem;
  }
  .article2 {
    @extend .article1;
    background-color: $bannerBgColor;
  }
}
//! sass de dizi de tanımlayabiliyoruz.ilgili yerden indisi çekrek kullanabiliriz

footer {
  // class ları tek tek oluşturmak yerine döngü ile oluşturacağız
  //  to da 5 dahil olmaz.through kullanırsak 5 dahil olur

  // ! İF -ELSE
  $index: 2;
  p {
    @if $index==1 {
      background-color: green;
    } @else if $index==2 {
      background-color: red;
    } @else {
      background-color: cyan;
    }
  }
  .boxes {
    display: flex;
    height: 10rem;
    $textColor: #990000, #55004e, #0fa8a1, #121456, #64c217;

    @for $i from 1 through 5 {
      .box#{$i} {
        width: 20%;
        background-color: lighten(black, $i * 15);
        font-size: $i * 0.7rem;
        // ! Diziden indis okuma..
        color: nth($textColor, $i);
      }
    }
  }
}
